package <%= moduleName %>_test

import (
	"testing"

	keepertest "<%= modulePath %>/testutil/keeper"
	"<%= modulePath %>/testutil/nullify"
	"<%= modulePath %>/x/<%= moduleName %>"
	"<%= modulePath %>/x/<%= moduleName %>/types"
	"github.com/stretchr/testify/require"
)

func TestGenesis(t *testing.T) {
	genesisState := types.GenesisState{
		Params:	types.DefaultParams(),
		<%= if (isIBC) { %>PortId: types.PortID,<% } %>
		// this line is used by starport scaffolding # genesis/test/state
	}

	k, ctx := keepertest.<%= title(moduleName) %>Keeper(t)
	<%= moduleName %>.InitGenesis(ctx, *k, genesisState)
	got := <%= moduleName %>.ExportGenesis(ctx, *k)
	require.NotNil(t, got)

	nullify.Fill(&genesisState)
	nullify.Fill(got)

	<%= if (isIBC) { %>require.Equal(t, genesisState.PortId, got.PortId)<% } %>

	// this line is used by starport scaffolding # genesis/test/assert
}
