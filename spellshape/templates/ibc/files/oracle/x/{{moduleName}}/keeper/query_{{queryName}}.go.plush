package keeper

import (
	"context"

	sdk "github.com/cosmos/cosmos-sdk/types"
	"<%= ModulePath %>/x/<%= moduleName %>/types"
)

// <%= queryName.UpperCamel %>Result returns the <%= queryName.UpperCamel %> result by RequestId
func (k Keeper) <%= queryName.UpperCamel %>Result(c context.Context, req *types.Query<%= queryName.UpperCamel %>Request) (*types.Query<%= queryName.UpperCamel %>Response, error) {
	ctx := sdk.UnwrapSDKContext(c)
	result, err := k.Get<%= queryName.UpperCamel %>Result(ctx, types.OracleRequestID(req.RequestId))
	if err != nil {
		return nil, err
	}
	return &types.Query<%= queryName.UpperCamel %>Response{Result: &result}, nil
}

// Last<%= queryName.UpperCamel %>Id returns the last <%= queryName.UpperCamel %> request Id
func (k Keeper) Last<%= queryName.UpperCamel %>Id(c context.Context, req *types.QueryLast<%= queryName.UpperCamel %>IdRequest) (*types.QueryLast<%= queryName.UpperCamel %>IdResponse, error) {
	ctx := sdk.UnwrapSDKContext(c)
	id := k.GetLast<%= queryName.UpperCamel %>ID(ctx)
	return &types.QueryLast<%= queryName.UpperCamel %>IdResponse{RequestId: id}, nil
}
